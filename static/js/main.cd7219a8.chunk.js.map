{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","value","options","legend","display","title","text","className","styles","container","Cards","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","variant","start","end","duration","separator","Date","toDateString","CountryPicker","handleCountryChange","fetchedCountries","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","particlesOptions","particles","App","state","fetchedData","setState","this","params","src","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd7219a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3cukk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1ucLb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2E3fa\",\"card\":\"Cards_card__1p6oM\",\"infected\":\"Cards_infected__1wT_D\",\"recovered\":\"Cards_recovered__1e1zV\",\"deaths\":\"Cards_deaths__oQJcP\"};","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) => {\r\n\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try{\r\n\r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n       \r\n    } catch(error) {\r\n        console.log(error);   \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n        try{\r\n            const {data} = await axios.get(`${url}/daily`);\r\n            const modifiedData = data.map((dailyData) => ({\r\n                confirmed: dailyData.confirmed.total,\r\n                deaths: dailyData.deaths.total,\r\n                date: dailyData.reportDate,\r\n            }));\r\n            \r\n            return modifiedData;\r\n        }\r\n        catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country)=> country.name);\r\n\r\n    } catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        // console.log(dailyData);\r\n\r\n        fetchAPI();\r\n\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ?(\r\n            <Line\r\n            data = {{\r\n                labels: dailyData.map(({date})=>  date),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed})=>  confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill:true,\r\n        \r\n\r\n                },\r\n                {\r\n                    data: dailyData.map(({deaths})=>  deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill:true,\r\n\r\n                }],\r\n            }}\r\n            />\r\n\r\n        ): null\r\n     \r\n\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed?\r\n        (\r\n            <Bar\r\n                data={{labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [\r\n                    {\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                    data: [confirmed.value, recovered.value, deaths.value],\r\n                    }\r\n                ],\r\n                }}\r\n                options={{\r\n                legend: { display: false },\r\n                title: { display: true, text: `Current state in ${country}` },\r\n                }}\r\n            />\r\n\r\n        ): null\r\n    );\r\n\r\n    // console.log(confirmed, recovered, deaths);\r\n        \r\n  \r\n    return (\r\n        <div className={styles.container}>\r\n\r\n            {country? barChart: lineChart}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport styles from \"./Cards.module.css\"\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <Grid container spacing={5} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\">Infected </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={1.7}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\">Recovered </Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={1.7}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recovered cases of COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\">Deaths </Typography>\r\n                        <Typography variant=\"h5\"> \r\n                            <CountUp\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={1.7}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths from COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api/index.js';\r\n\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    \r\n    const [fetchedCountries, setCountries] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n\r\n            setCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    \r\n    }, [setCountries]);\r\n\r\n    // console.log(fetchCountries);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n// import Cards from './components/Cards/Cards.jsx';\r\n// import Chart from './components/Chart/Chart.jsx';\r\n// import CountryPicker from './components/CountryPicker/CountryPicker.jsx';\r\n\r\nimport {Chart, Cards, CountryPicker} from './components';\r\nimport './App.css';\r\nimport {fetchData} from './api';\r\nimport Particles from 'react-particles-js';\r\n\r\n\r\nconst particlesOptions ={\r\n    particles:{\r\n        \"number\": {\r\n            \"value\": 160,\r\n            \"density\": {\r\n                \"enable\": false\r\n            }\r\n        },\r\n        \"size\": {\r\n            \"value\": 10,\r\n            \"random\": true\r\n        },\r\n        \"move\": {\r\n            \"direction\": \"bottom\",\r\n            \"out_mode\": \"out\"\r\n        },\r\n        \"line_linked\": {\r\n            \"enable\": false\r\n        }\r\n    },\r\n    \"interactivity\": {\r\n        \"events\": {\r\n            \"onclick\": {\r\n                \"enable\": true,\r\n                \"mode\": \"remove\"\r\n            }\r\n        },\r\n        \"modes\": {\r\n            \"remove\": {\r\n                \"particles_nb\": 10\r\n            }\r\n        }\r\n    }\r\n  }\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data : fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data : fetchedData, country: country});\r\n        //fetch the data\r\n        //set the state\r\n      \r\n    }\r\n\r\n    render(){\r\n\r\n        const {data, country} = this.state;\r\n        return (\r\n            <div className= \"container\">\r\n                <Particles  className='particles'\r\n                     params={particlesOptions}/>\r\n\r\n\r\n                <img src=\"https://i.ibb.co/7QpKsCX/image.png\" alt=\"covid-19\" className=\"image\"/>\r\n                \r\n                <Cards data={data}/>\r\n                \r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}